@mixin clearfix {
    &::after {
        content: '';
        display: table;
        clear: both;
    }
}

@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin no-select {
  // -webkit-touch-callout: none;
  // -webkit-user-select: none;
  // -khtml-user-select: none;
  // -moz-user-select: none;
  // -ms-user-select: none;
  // user-select: none;
}

@mixin pointer-none {
  -moz-pointer-events:none;
  -webkit-pointer-events:none;
  -o-pointer-events:none;
  -ms-pointer-events:none;
  pointer-events:none;
}

@mixin placeholder($color) {
    &::-webkit-input-placeholder {
        color: $color;
    }

    &:-moz-placeholder {
        color: $color;
    }

    &::-moz-placeholder {
        color: $color;
    }

    &:-ms-input-placeholder {
        color: $color;
    }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin border-radius-left($radius) {
    -webkit-border-top-left-radius: $radius;
 -webkit-border-bottom-left-radius: $radius;
        -moz-border-radius-topleft: $radius;
     -moz-border-radius-bottomleft: $radius;
            border-top-left-radius: $radius;
         border-bottom-left-radius: $radius;
}

@mixin border-radius-right($radius) {
    -webkit-border-top-right-radius: $radius;
 -webkit-border-bottom-right-radius: $radius;
        -moz-border-radius-topright: $radius;
     -moz-border-radius-bottomright: $radius;
            border-top-right-radius: $radius;
         border-bottom-right-radius: $radius;
}

@mixin box-shadow($top, $left, $blur, $distance, $rgba) {
  -webkit-box-shadow:$top $left $blur $distance $rgba;
  -moz-box-shadow:$top $left $blur $distance $rgba;
  box-shadow:$top $left $blur $distance $rgba;
}

/// Helper to create Keyframes on easy way
@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}
@mixin animate($name, $duration, $iteration, $direction) {
  -webkit-animation-duration: $duration;
     -moz-animation-duration: $duration;
       -o-animation-duration: $duration;
          animation-duration: $duration;
  -webkit-animation-iteration-count: $iteration;
     -moz-animation-iteration-count: $iteration;
       -o-animation-iteration-count: $iteration;
          animation-iteration-count: $iteration;
  -webkit-animation-name: $name;
     -moz-animation-name: $name;
       -o-animation-name: $name;
          animation-name: $name;
  -webkit-animation-direction: $direction;
     -moz-animation-direction: $direction;
       -o-animation-direction: $direction;
          animation-direction: $direction;
}

@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}

@mixin scale($scale) {
	 @include transform(scale($scale));
}

@mixin animation($timing, $animation) {

}

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}


@mixin centerer($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}



@mixin respond-to($breakpoint) {
  @if $breakpoint == "small" {
    @media (min-width: 768px) {
      @content;
    }
  }

  @else if $breakpoint == "medium" {
    @media (min-width: 992px) {
      @content;
    }
  }

  @else if $breakpoint == "large" {
    @media (min-width: 1200px) {
      @content;
    }
  }
  @else if $breakpoint == "minHeight" {
    @media (max-height: 200px) {
      @content;
    }
  }
}
